{
    // Place your VegaDW workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    //     "scope": "javascript,typescript",
    //     "prefix": "log",
    //     "body": [
    //         "console.log('$1');",
    //         "$2"
    //     ],
    //     "description": "Log output to console"
    // }
    "hoardTest": {
        "prefix": "hoardTest",
        "body": [
            "[",
            "    [",
            "        {",
            "            \"arrange\": {",
            "                \"toTable\": \"stash.${1:test}.${2:toTable}\",",
            "                \"fromCsv\": \"${3:stashDataDescription}\",",
            "                \"alsoCleanse\": true",
            "            }",
            "       },",
            "       {",
            "            \"arrange\": {",
            "                \"toTable\": \"grip.${1:test}.${2:toTable}:${5:gripScope}\",",
            "                \"fromCsv\": \"${4:gripDataDescription}\"",
            "            },",
            "            \"act\": {",
            "                \"operation\": \"HOARD\",",
            "                \"fromTable\": \"grip.${1:test}.${2:toTable}:${5:gripScope}\",",
            "                \"alsoCleanse\": true",
            "            },",
            "            \"assert\": {",
            "                \"audit\": [",
            "                    {",
            "                        \"operation\": \"HOARD\",",
            "                        \"fromTable\": \"grip.${1:test}.${2:toTable}:${5:gripScope}\"",
            "                    },",
            "                    {",
            "                        \"operation\": \"CLEANSE\",",
            "                        \"fromTable\": \"stash.${1:test}.${2:toTable}\"",
            "                    }",
            "                ],",
            "                \"hasResult\": {",
            "                    \"finalLogicalRows\": {",
            "                        \"is\": ${6:PostActRowcount},",
            "                        \"because\": \"${7:PostActRowcountBecause}\"",
            "                    },",
            "                }",
            "            }",
            "            \"assert\": [{",
            "                \"audit\": ",
            "                    {",
            "                        \"operation\": \"HOARD\",",
            "                        \"fromTable\": \"grip.${1:test}.${2:toTable}:${5:gripScope}\"",
            "                    }",
            "                ,",
            "                \"hasResult\": {",
            "                    \"finalLogicalRows\": {",
            "                        \"is\": ${6:PostActRowcount},",
            "                        \"because\": \"${7:PostActRowcountBecause}\"",
            "                    },",
            "                }",
            "            },{",
            "                \"audit\": ",
            "                    {",
            "                        \"operation\": \"CLEANSE\",",
            "                        \"fromTable\": \"stash.${1:test}.${2:toTable}\"",
            "                    }",
            "                ,",
            "                \"hasResult\": {",
            "                    \"finalLogicalRows\": {",
            "                        \"is\": ${6:PostActRowcount},",
            "                        \"because\": \"${7:PostActRowcountBecause}\"",
            "                    },",
            "                }",
            "            }]",
            "        }",
            "    ]",
            "]"
        ]
    },
    "assert": {
        "scope": "jsonc",
        "description": "replaces a scalar value with an is/because block. It will use the clipboard for the becuase so cut this first",
        "body": [
            "{",
            "    \"is\": ${1:$TM_SELECTED_TEXT},",
            "    \"because\": \"${2:$CLIPBOARD}\"",
            "}"
        ]
    }
}
